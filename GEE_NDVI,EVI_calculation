function maskL8sr(image) {
  // Bits 3 and 5 are cloud shadow and cloud, respectively.
  var cloudShadowBitMask = (1 << 3);
  var cloudsBitMask = (1 << 5);
  // Get the pixel QA band.
  var qa = image.select('pixel_qa');
  // Both flags should be set to zero, indicating clear conditions.
  var mask = qa.bitwiseAnd(cloudShadowBitMask).eq(0)
                 .and(qa.bitwiseAnd(cloudsBitMask).eq(0));
  return image.updateMask(mask);
}
var dataset = ee.ImageCollection('LANDSAT/LC08/C01/T1_SR');
var korea = ee.FeatureCollection('users/olodii36/KOR_adm0').select('NAME_0');
var districts = ee.FeatureCollection('users/olodii36/KOR_adm1').select('NAME_1');

var vegPalette = ['white', 'green'];

var L8 = ee.Image(dataset
  .filterBounds(korea)
  .filterDate('2015-01-01','2015-01-31')// 날짜만 월별로 변경
  .filterMetadata('CLOUD_COVER_LAND', 'less_than', 3)
  .map(maskL8sr)
  .sort('CLOUD_COVER_LAND')
  .mean());
  

// NDVI
var ndvi = L8.select(['B5','B4']).normalizedDifference();
Map.addLayer(ndvi.clip(korea), {min: -1, max: 1, palette: vegPalette}, 'NDVI');

// EVI (applies scaling factor)
var evi = L8.expression('2.5 * ((NIR-RED)/  (NIR + 6*RED - 7.5*BLUE + 1))',{
  'NIR': L8.select('B5').multiply(0.0001),
  'RED': L8.select('B4').multiply(0.0001),
  'BLUE': L8.select('B2').multiply(0.0001)}).rename('evi1');
Map.addLayer(evi.clip(korea), {max:1, min:-1, palette:vegPalette}, 'EVI');


//------------------------------------------------------------
// 시도별 mean, std, minmax 값 
var mean = evi.reduceRegions({
  collection: districts,
  reducer: ee.Reducer.mean(),
  scale: 30
})

var std = evi.reduceRegions({
  collection: districts,
  reducer: ee.Reducer.stdDev(),
  scale: 30
})

print('Mean_EVI_in_each_districts', mean)
print('Std_EVI_in_each_districts', std)

var mndvi = ndvi.reduceRegions({
  collection: districts,
  reducer: ee.Reducer.mean(),
  scale: 30
})
var stdndvi = ndvi.reduceRegions({
  collection: districts,
  reducer: ee.Reducer.stdDev(),
  scale: 30
})

print('Mean_NDVI_in_each_districts', mndvi)
print('Std_NDVI_in_each_districts', stdndvi)


